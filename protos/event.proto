syntax = "proto3";

package debate;

message UIEvent {
  string event_id = 1;
  string component_id = 2;
  EventType type = 3;
  int64 timestamp = 4;
  map<string, string> data = 5; // Legacy data field for backward compatibility
  
  // New flexible action system
  string action_id = 6; // The action to perform (e.g., "createRoom", "submitForm", etc.)
  repeated EventData event_data = 7; // List of data items that can be any size
  map<string, string> metadata = 8; // Additional optional metadata
}

// Flexible data structure for event payloads
message EventData {
  string key = 1; // Field name (e.g., "roomName", "description", "inputValue1")
  EventValue value = 2; // The actual value
}

// Union type for different value types
message EventValue {
  oneof value {
    string text_value = 1;
    int64 number_value = 2;
    bool boolean_value = 3;
    double decimal_value = 4;
    bytes binary_value = 5;
    StringList list_value = 6; // For arrays of strings
  }
}

// Helper message for string arrays
message StringList {
  repeated string values = 1;
}

enum EventType {
  UNKNOWN = 0;
  CLICK = 1;
  INPUT_CHANGE = 2;
  FORM_SUBMIT = 3;
  NODE_ADDED = 4;
  NODE_REMOVED = 5;
  EDGE_ADDED = 6;
  EDGE_REMOVED = 7;
  ACTION = 8; // New type for action-based events
}
