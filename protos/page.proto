syntax = "proto3";

package ui;

// ======================
// Root Page definition
// ======================
message Page {
  string page_id = 1;                 // Unique page identifier
  string title = 2;                   // Page title (optional)
  repeated Component components = 3;  // Top-level components
  Theme theme = 4;                    // Optional theme info
  map<string, string> metadata = 5;   // Extra page-level metadata
}

// ======================
// Component definition
// ======================
message Component {
  string id = 1;                       // Unique component ID
  ComponentType type = 2;              // Predefined component type
  string text = 3;                     // Optional label/text content
  repeated Component children = 4;     // Nested components
  Style style = 5;                     // Tailwind / structured style info
  map<string, string> css = 6;         // Arbitrary inline CSS (fallback/flexibility)
  map<string, string> events = 7;      // Event name â†’ action ID
  map<string, string> attributes = 8;  // Arbitrary HTML attributes (e.g., data-* attrs)
  string name = 9;                     // For form inputs/buttons
  string value = 10;                   // Default or bound value
  repeated ListItem items = 11;        // For lists, dropdowns, menus
}

// ======================
// Component types
// ======================
enum ComponentType {
  UNKNOWN = 0;
  TEXT = 1;
  BUTTON = 2;
  INPUT = 3;
  TEXTAREA = 4;
  NODE_GRAPH = 5;
  CHAT = 6;
  IMAGE = 7;
  CARD = 8;
  LIST = 9;
  TABLE = 10;
  MODAL = 11;
  CONTAINER = 12;
  FORM = 13;
  ICON = 14;
}

// ======================
// Styling information
// ======================
message Style {
  LayoutType layout = 1;              // flex/grid/absolute/etc.
  Position position = 2;              // For absolute/fixed layout
  Size size = 3;                       // Width & height
  string padding = 4;                  // Tailwind padding utility (e.g., "p-4")
  string margin = 5;                   // Tailwind margin utility (e.g., "m-2")
  string bg_color = 6;                 // Tailwind background color class
  string text_color = 7;               // Tailwind text color class
  string border = 8;                   // Tailwind border utility
  string rounded = 9;                  // Tailwind rounded corners
  string shadow = 10;                  // Tailwind shadow class
  string gap = 11;                     // Tailwind gap utility
  bool scrollable = 12;                // Allow scroll if content overflows
  string custom_class = 13;            // Any extra Tailwind classes
}

// ======================
// Layout, position, size
// ======================
enum LayoutType {
  ABSOLUTE = 0;
  FLEX_ROW = 1;
  FLEX_COL = 2;
  GRID = 3;
  INLINE = 4;
}

message Position {
  float x = 1; // px or % depending on renderer
  float y = 2;
  string unit = 3; // "px", "%", "rem"
}

message Size {
  string width = 1;  // Tailwind width class or explicit value
  string height = 2; // Tailwind height class or explicit value
}

// ======================
// Theme (optional)
// ======================
message Theme {
  string primary_color = 1;    // Tailwind-compatible color class
  string secondary_color = 2;
  string font_family = 3;      // e.g., "font-sans"
  string accent_color = 4;     // Additional accent color
}

// ======================
// List items
// ======================
message ListItem {
  string label = 1;
  string value = 2;
  string icon = 3; // Optional icon class for UI frameworks
}
