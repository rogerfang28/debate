syntax = "proto3";

package debate;

option go_package = "debate/go_page_builder/protos;protos";

// ======================
// Root Page definition
// ======================
message Page {
  string page_id = 1;                 // Unique page identifier
  string title = 2;                   // Page title
  repeated Component components = 3;  // Top-level components
  Theme theme = 4;                     // Optional theme info
}

// ======================
// Component definition
// ======================
message Component {
  string id = 1;                       // Unique component ID
  ComponentType type = 2;              // Predefined component type
  string text = 3;                     // Optional label/text
  repeated Component children = 4;     // Nested components
  Style style = 5;                      // Styling & layout info
  map<string, string> events = 6;      // Event name â†’ action ID
}

// ======================
// Component types
// ======================
enum ComponentType {
  UNKNOWN = 0;
  TEXT = 1;
  BUTTON = 2;
  INPUT = 3;
  NODE_GRAPH = 4;    // Debate graph widget
  CHAT = 5;          // Chat window
  IMAGE = 6;
  LIST = 7;
  CONTAINER = 8;
  MODAL = 9;
}

// ======================
// Styling information
// ======================
message Style {
  LayoutType layout = 1;               // flex/grid/absolute/etc.
  Position position = 2;               // For absolute/fixed layout
  Size size = 3;                        // Width & height
  string padding = 4;                   // Tailwind utility (e.g., "p-4")
  string margin = 5;                    // Tailwind utility (e.g., "m-2")
  string bg_color = 6;                  // Tailwind utility (e.g., "bg-blue-500")
  string text_color = 7;                // Tailwind utility (e.g., "text-white")
  string border = 8;                    // Tailwind border utility
  string rounded = 9;                   // Tailwind rounded corners
  string shadow = 10;                   // Tailwind shadow class
  string gap = 11;                       // Tailwind gap class for children
  bool scrollable = 12;                 // Allow scroll if content overflows
  string custom_class = 13;             // Any extra Tailwind class(es)
}

// ======================
// Layout, position, size
// ======================
enum LayoutType {
  ABSOLUTE = 0;
  FLEX_ROW = 1;
  FLEX_COL = 2;
  GRID = 3;
}

message Position {
  float x = 1; // px or % depending on renderer
  float y = 2;
  string unit = 3; // "px", "%", "rem"
}

message Size {
  string width = 1;  // Tailwind width class or custom
  string height = 2; // Tailwind height class or custom
}

// ======================
// Theme (optional)
// ======================
message Theme {
  string primary_color = 1;    // Tailwind-compatible color class
  string secondary_color = 2;
  string font_family = 3;      // e.g., "font-sans"
}
