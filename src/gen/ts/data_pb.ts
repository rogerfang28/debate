// @generated by protoc-gen-es v2.6.3 with parameter "target=ts,import_extension=js"
// @generated from file data.proto (package test, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file data.proto.
 */
export const file_data: GenFile = /*@__PURE__*/
  fileDesc("CgpkYXRhLnByb3RvEgR0ZXN0IikKBk15RGF0YRIQCgh1c2VybmFtZRgBIAEoCRINCgVzY29yZRgCIAEoBTI1CgtEYXRhU2VydmljZRImCghTZW5kRGF0YRIMLnRlc3QuTXlEYXRhGgwudGVzdC5NeURhdGFiBnByb3RvMw");

/**
 * Simple message to send between client and server
 *
 * @generated from message test.MyData
 */
export type MyData = Message<"test.MyData"> & {
  /**
   * Name of the user
   *
   * @generated from field: string username = 1;
   */
  username: string;

  /**
   * Game score or points
   *
   * @generated from field: int32 score = 2;
   */
  score: number;
};

/**
 * Describes the message test.MyData.
 * Use `create(MyDataSchema)` to create a new message.
 */
export const MyDataSchema: GenMessage<MyData> = /*@__PURE__*/
  messageDesc(file_data, 0);

/**
 * Simple gRPC service for testing
 *
 * @generated from service test.DataService
 */
export const DataService: GenService<{
  /**
   * @generated from rpc test.DataService.SendData
   */
  sendData: {
    methodKind: "unary";
    input: typeof MyDataSchema;
    output: typeof MyDataSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_data, 0);

