// @generated by protoc-gen-es v2.6.3 with parameter "target=ts,import_extension=js"
// @generated from file event.proto (package debate, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file event.proto.
 */
export const file_event: GenFile = /*@__PURE__*/
  fileDesc("CgtldmVudC5wcm90bxIGZGViYXRlItcCCgdVSUV2ZW50EhAKCGV2ZW50X2lkGAEgASgJEhQKDGNvbXBvbmVudF9pZBgCIAEoCRIfCgR0eXBlGAMgASgOMhEuZGViYXRlLkV2ZW50VHlwZRIRCgl0aW1lc3RhbXAYBCABKAMSJwoEZGF0YRgFIAMoCzIZLmRlYmF0ZS5VSUV2ZW50LkRhdGFFbnRyeRIRCglhY3Rpb25faWQYBiABKAkSJQoKZXZlbnRfZGF0YRgHIAMoCzIRLmRlYmF0ZS5FdmVudERhdGESLwoIbWV0YWRhdGEYCCADKAsyHS5kZWJhdGUuVUlFdmVudC5NZXRhZGF0YUVudHJ5GisKCURhdGFFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBGi8KDU1ldGFkYXRhRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASI7CglFdmVudERhdGESCwoDa2V5GAEgASgJEiEKBXZhbHVlGAIgASgLMhIuZGViYXRlLkV2ZW50VmFsdWUitwEKCkV2ZW50VmFsdWUSFAoKdGV4dF92YWx1ZRgBIAEoCUgAEhYKDG51bWJlcl92YWx1ZRgCIAEoA0gAEhcKDWJvb2xlYW5fdmFsdWUYAyABKAhIABIXCg1kZWNpbWFsX3ZhbHVlGAQgASgBSAASFgoMYmluYXJ5X3ZhbHVlGAUgASgMSAASKAoKbGlzdF92YWx1ZRgGIAEoCzISLmRlYmF0ZS5TdHJpbmdMaXN0SABCBwoFdmFsdWUiHAoKU3RyaW5nTGlzdBIOCgZ2YWx1ZXMYASADKAkqlgEKCUV2ZW50VHlwZRILCgdVTktOT1dOEAASCQoFQ0xJQ0sQARIQCgxJTlBVVF9DSEFOR0UQAhIPCgtGT1JNX1NVQk1JVBADEg4KCk5PREVfQURERUQQBBIQCgxOT0RFX1JFTU9WRUQQBRIOCgpFREdFX0FEREVEEAYSEAoMRURHRV9SRU1PVkVEEAcSCgoGQUNUSU9OEAhiBnByb3RvMw");

/**
 * @generated from message debate.UIEvent
 */
export type UIEvent = Message<"debate.UIEvent"> & {
  /**
   * @generated from field: string event_id = 1;
   */
  eventId: string;

  /**
   * @generated from field: string component_id = 2;
   */
  componentId: string;

  /**
   * @generated from field: debate.EventType type = 3;
   */
  type: EventType;

  /**
   * @generated from field: int64 timestamp = 4;
   */
  timestamp: bigint;

  /**
   * Legacy data field for backward compatibility
   *
   * @generated from field: map<string, string> data = 5;
   */
  data: { [key: string]: string };

  /**
   * New flexible action system
   *
   * The action to perform (e.g., "createRoom", "submitForm", etc.)
   *
   * @generated from field: string action_id = 6;
   */
  actionId: string;

  /**
   * List of data items that can be any size
   *
   * @generated from field: repeated debate.EventData event_data = 7;
   */
  eventData: EventData[];

  /**
   * Additional optional metadata
   *
   * @generated from field: map<string, string> metadata = 8;
   */
  metadata: { [key: string]: string };
};

/**
 * Describes the message debate.UIEvent.
 * Use `create(UIEventSchema)` to create a new message.
 */
export const UIEventSchema: GenMessage<UIEvent> = /*@__PURE__*/
  messageDesc(file_event, 0);

/**
 * Flexible data structure for event payloads
 *
 * @generated from message debate.EventData
 */
export type EventData = Message<"debate.EventData"> & {
  /**
   * Field name (e.g., "roomName", "description", "inputValue1")
   *
   * @generated from field: string key = 1;
   */
  key: string;

  /**
   * The actual value
   *
   * @generated from field: debate.EventValue value = 2;
   */
  value?: EventValue;
};

/**
 * Describes the message debate.EventData.
 * Use `create(EventDataSchema)` to create a new message.
 */
export const EventDataSchema: GenMessage<EventData> = /*@__PURE__*/
  messageDesc(file_event, 1);

/**
 * Union type for different value types
 *
 * @generated from message debate.EventValue
 */
export type EventValue = Message<"debate.EventValue"> & {
  /**
   * @generated from oneof debate.EventValue.value
   */
  value: {
    /**
     * @generated from field: string text_value = 1;
     */
    value: string;
    case: "textValue";
  } | {
    /**
     * @generated from field: int64 number_value = 2;
     */
    value: bigint;
    case: "numberValue";
  } | {
    /**
     * @generated from field: bool boolean_value = 3;
     */
    value: boolean;
    case: "booleanValue";
  } | {
    /**
     * @generated from field: double decimal_value = 4;
     */
    value: number;
    case: "decimalValue";
  } | {
    /**
     * @generated from field: bytes binary_value = 5;
     */
    value: Uint8Array;
    case: "binaryValue";
  } | {
    /**
     * For arrays of strings
     *
     * @generated from field: debate.StringList list_value = 6;
     */
    value: StringList;
    case: "listValue";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message debate.EventValue.
 * Use `create(EventValueSchema)` to create a new message.
 */
export const EventValueSchema: GenMessage<EventValue> = /*@__PURE__*/
  messageDesc(file_event, 2);

/**
 * Helper message for string arrays
 *
 * @generated from message debate.StringList
 */
export type StringList = Message<"debate.StringList"> & {
  /**
   * @generated from field: repeated string values = 1;
   */
  values: string[];
};

/**
 * Describes the message debate.StringList.
 * Use `create(StringListSchema)` to create a new message.
 */
export const StringListSchema: GenMessage<StringList> = /*@__PURE__*/
  messageDesc(file_event, 3);

/**
 * @generated from enum debate.EventType
 */
export enum EventType {
  /**
   * @generated from enum value: UNKNOWN = 0;
   */
  UNKNOWN = 0,

  /**
   * @generated from enum value: CLICK = 1;
   */
  CLICK = 1,

  /**
   * @generated from enum value: INPUT_CHANGE = 2;
   */
  INPUT_CHANGE = 2,

  /**
   * @generated from enum value: FORM_SUBMIT = 3;
   */
  FORM_SUBMIT = 3,

  /**
   * @generated from enum value: NODE_ADDED = 4;
   */
  NODE_ADDED = 4,

  /**
   * @generated from enum value: NODE_REMOVED = 5;
   */
  NODE_REMOVED = 5,

  /**
   * @generated from enum value: EDGE_ADDED = 6;
   */
  EDGE_ADDED = 6,

  /**
   * @generated from enum value: EDGE_REMOVED = 7;
   */
  EDGE_REMOVED = 7,

  /**
   * New type for action-based events
   *
   * @generated from enum value: ACTION = 8;
   */
  ACTION = 8,
}

/**
 * Describes the enum debate.EventType.
 */
export const EventTypeSchema: GenEnum<EventType> = /*@__PURE__*/
  enumDesc(file_event, 0);

