// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: event.proto
// Protobuf C++ Version: 5.29.5

#include "event.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace debate {
              template <typename>
PROTOBUF_CONSTEXPR UIEvent_MetadataEntry_DoNotUse::UIEvent_MetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : UIEvent_MetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : UIEvent_MetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct UIEvent_MetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UIEvent_MetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UIEvent_MetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    UIEvent_MetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UIEvent_MetadataEntry_DoNotUseDefaultTypeInternal _UIEvent_MetadataEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR UIEvent_DataEntry_DoNotUse::UIEvent_DataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : UIEvent_DataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : UIEvent_DataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct UIEvent_DataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UIEvent_DataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UIEvent_DataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    UIEvent_DataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UIEvent_DataEntry_DoNotUseDefaultTypeInternal _UIEvent_DataEntry_DoNotUse_default_instance_;

inline constexpr StringList::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : values_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR StringList::StringList(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct StringListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StringListDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StringListDefaultTypeInternal() {}
  union {
    StringList _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StringListDefaultTypeInternal _StringList_default_instance_;

inline constexpr EventValue::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : value_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR EventValue::EventValue(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EventValueDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EventValueDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EventValueDefaultTypeInternal() {}
  union {
    EventValue _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EventValueDefaultTypeInternal _EventValue_default_instance_;

inline constexpr EventData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        value_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR EventData::EventData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EventDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EventDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EventDataDefaultTypeInternal() {}
  union {
    EventData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EventDataDefaultTypeInternal _EventData_default_instance_;

inline constexpr UIEvent::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : data_{},
        event_data_{},
        metadata_{},
        event_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        component_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        action_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timestamp_{::int64_t{0}},
        type_{static_cast< ::debate::EventType >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR UIEvent::UIEvent(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UIEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UIEventDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UIEventDefaultTypeInternal() {}
  union {
    UIEvent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UIEventDefaultTypeInternal _UIEvent_default_instance_;
}  // namespace debate
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_event_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_event_2eproto = nullptr;
const ::uint32_t
    TableStruct_event_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::debate::UIEvent_DataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::debate::UIEvent_DataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::debate::UIEvent_DataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::debate::UIEvent_DataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::debate::UIEvent_MetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::debate::UIEvent_MetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::debate::UIEvent_MetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::debate::UIEvent_MetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::debate::UIEvent, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::debate::UIEvent, _impl_.event_id_),
        PROTOBUF_FIELD_OFFSET(::debate::UIEvent, _impl_.component_id_),
        PROTOBUF_FIELD_OFFSET(::debate::UIEvent, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::debate::UIEvent, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::debate::UIEvent, _impl_.data_),
        PROTOBUF_FIELD_OFFSET(::debate::UIEvent, _impl_.action_id_),
        PROTOBUF_FIELD_OFFSET(::debate::UIEvent, _impl_.event_data_),
        PROTOBUF_FIELD_OFFSET(::debate::UIEvent, _impl_.metadata_),
        PROTOBUF_FIELD_OFFSET(::debate::EventData, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::debate::EventData, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::debate::EventData, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::debate::EventData, _impl_.value_),
        ~0u,
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::debate::EventValue, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::debate::EventValue, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::debate::EventValue, _impl_.value_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::debate::StringList, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::debate::StringList, _impl_.values_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::debate::UIEvent_DataEntry_DoNotUse)},
        {12, 22, -1, sizeof(::debate::UIEvent_MetadataEntry_DoNotUse)},
        {24, -1, -1, sizeof(::debate::UIEvent)},
        {40, 50, -1, sizeof(::debate::EventData)},
        {52, -1, -1, sizeof(::debate::EventValue)},
        {67, -1, -1, sizeof(::debate::StringList)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::debate::_UIEvent_DataEntry_DoNotUse_default_instance_._instance,
    &::debate::_UIEvent_MetadataEntry_DoNotUse_default_instance_._instance,
    &::debate::_UIEvent_default_instance_._instance,
    &::debate::_EventData_default_instance_._instance,
    &::debate::_EventValue_default_instance_._instance,
    &::debate::_StringList_default_instance_._instance,
};
const char descriptor_table_protodef_event_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\013event.proto\022\006debate\"\327\002\n\007UIEvent\022\020\n\010eve"
    "nt_id\030\001 \001(\t\022\024\n\014component_id\030\002 \001(\t\022\037\n\004typ"
    "e\030\003 \001(\0162\021.debate.EventType\022\021\n\ttimestamp\030"
    "\004 \001(\003\022\'\n\004data\030\005 \003(\0132\031.debate.UIEvent.Dat"
    "aEntry\022\021\n\taction_id\030\006 \001(\t\022%\n\nevent_data\030"
    "\007 \003(\0132\021.debate.EventData\022/\n\010metadata\030\010 \003"
    "(\0132\035.debate.UIEvent.MetadataEntry\032+\n\tDat"
    "aEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\032/"
    "\n\rMetadataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 "
    "\001(\t:\0028\001\";\n\tEventData\022\013\n\003key\030\001 \001(\t\022!\n\005val"
    "ue\030\002 \001(\0132\022.debate.EventValue\"\267\001\n\nEventVa"
    "lue\022\024\n\ntext_value\030\001 \001(\tH\000\022\026\n\014number_valu"
    "e\030\002 \001(\003H\000\022\027\n\rboolean_value\030\003 \001(\010H\000\022\027\n\rde"
    "cimal_value\030\004 \001(\001H\000\022\026\n\014binary_value\030\005 \001("
    "\014H\000\022(\n\nlist_value\030\006 \001(\0132\022.debate.StringL"
    "istH\000B\007\n\005value\"\034\n\nStringList\022\016\n\006values\030\001"
    " \003(\t*\226\001\n\tEventType\022\013\n\007UNKNOWN\020\000\022\t\n\005CLICK"
    "\020\001\022\020\n\014INPUT_CHANGE\020\002\022\017\n\013FORM_SUBMIT\020\003\022\016\n"
    "\nNODE_ADDED\020\004\022\020\n\014NODE_REMOVED\020\005\022\016\n\nEDGE_"
    "ADDED\020\006\022\020\n\014EDGE_REMOVED\020\007\022\n\n\006ACTION\020\010b\006p"
    "roto3"
};
static ::absl::once_flag descriptor_table_event_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_event_2eproto = {
    false,
    false,
    805,
    descriptor_table_protodef_event_2eproto,
    "event.proto",
    &descriptor_table_event_2eproto_once,
    nullptr,
    0,
    6,
    schemas,
    file_default_instances,
    TableStruct_event_2eproto::offsets,
    file_level_enum_descriptors_event_2eproto,
    file_level_service_descriptors_event_2eproto,
};
namespace debate {
const ::google::protobuf::EnumDescriptor* EventType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_event_2eproto);
  return file_level_enum_descriptors_event_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t EventType_internal_data_[] = {
    589824u, 0u, };
bool EventType_IsValid(int value) {
  return 0 <= value && value <= 8;
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              UIEvent_DataEntry_DoNotUse::UIEvent_DataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              UIEvent_DataEntry_DoNotUse::UIEvent_DataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              UIEvent_DataEntry_DoNotUse::UIEvent_DataEntry_DoNotUse() : SuperType() {}
              UIEvent_DataEntry_DoNotUse::UIEvent_DataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* UIEvent_DataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) UIEvent_DataEntry_DoNotUse(arena);
              }
              constexpr auto UIEvent_DataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(UIEvent_DataEntry_DoNotUse),
                                                          alignof(UIEvent_DataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull UIEvent_DataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_UIEvent_DataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &UIEvent_DataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<UIEvent_DataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &UIEvent_DataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &UIEvent_DataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(UIEvent_DataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &UIEvent_DataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_event_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* UIEvent_DataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 41, 2> UIEvent_DataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UIEvent_DataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::debate::UIEvent_DataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(UIEvent_DataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(UIEvent_DataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(UIEvent_DataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(UIEvent_DataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\30\3\5\0\0\0\0\0"
    "debate.UIEvent.DataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              UIEvent_MetadataEntry_DoNotUse::UIEvent_MetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              UIEvent_MetadataEntry_DoNotUse::UIEvent_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              UIEvent_MetadataEntry_DoNotUse::UIEvent_MetadataEntry_DoNotUse() : SuperType() {}
              UIEvent_MetadataEntry_DoNotUse::UIEvent_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* UIEvent_MetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) UIEvent_MetadataEntry_DoNotUse(arena);
              }
              constexpr auto UIEvent_MetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(UIEvent_MetadataEntry_DoNotUse),
                                                          alignof(UIEvent_MetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull UIEvent_MetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_UIEvent_MetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &UIEvent_MetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<UIEvent_MetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &UIEvent_MetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &UIEvent_MetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(UIEvent_MetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &UIEvent_MetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_event_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* UIEvent_MetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 45, 2> UIEvent_MetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UIEvent_MetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::debate::UIEvent_MetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(UIEvent_MetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(UIEvent_MetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(UIEvent_MetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(UIEvent_MetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\34\3\5\0\0\0\0\0"
    "debate.UIEvent.MetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class UIEvent::_Internal {
 public:
};

UIEvent::UIEvent(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:debate.UIEvent)
}
inline PROTOBUF_NDEBUG_INLINE UIEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::debate::UIEvent& from_msg)
      : data_{visibility, arena, from.data_},
        event_data_{visibility, arena, from.event_data_},
        metadata_{visibility, arena, from.metadata_},
        event_id_(arena, from.event_id_),
        component_id_(arena, from.component_id_),
        action_id_(arena, from.action_id_),
        _cached_size_{0} {}

UIEvent::UIEvent(
    ::google::protobuf::Arena* arena,
    const UIEvent& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UIEvent* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, timestamp_),
           offsetof(Impl_, type_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::type_));

  // @@protoc_insertion_point(copy_constructor:debate.UIEvent)
}
inline PROTOBUF_NDEBUG_INLINE UIEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : data_{visibility, arena},
        event_data_{visibility, arena},
        metadata_{visibility, arena},
        event_id_(arena),
        component_id_(arena),
        action_id_(arena),
        _cached_size_{0} {}

inline void UIEvent::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           0,
           offsetof(Impl_, type_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::type_));
}
UIEvent::~UIEvent() {
  // @@protoc_insertion_point(destructor:debate.UIEvent)
  SharedDtor(*this);
}
inline void UIEvent::SharedDtor(MessageLite& self) {
  UIEvent& this_ = static_cast<UIEvent&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.event_id_.Destroy();
  this_._impl_.component_id_.Destroy();
  this_._impl_.action_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* UIEvent::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) UIEvent(arena);
}
constexpr auto UIEvent::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(UIEvent, _impl_.data_) +
          decltype(UIEvent::_impl_.data_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(UIEvent, _impl_.data_) +
          decltype(UIEvent::_impl_.data_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(UIEvent, _impl_.event_data_) +
          decltype(UIEvent::_impl_.event_data_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(UIEvent, _impl_.metadata_) +
          decltype(UIEvent::_impl_.metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(UIEvent, _impl_.metadata_) +
          decltype(UIEvent::_impl_.metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(UIEvent), alignof(UIEvent), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&UIEvent::PlacementNew_,
                                 sizeof(UIEvent),
                                 alignof(UIEvent));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull UIEvent::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_UIEvent_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &UIEvent::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<UIEvent>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &UIEvent::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<UIEvent>(), &UIEvent::ByteSizeLong,
            &UIEvent::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(UIEvent, _impl_._cached_size_),
        false,
    },
    &UIEvent::kDescriptorMethods,
    &descriptor_table_event_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* UIEvent::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 3, 72, 2> UIEvent::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::debate::UIEvent>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string event_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(UIEvent, _impl_.event_id_)}},
    // string component_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(UIEvent, _impl_.component_id_)}},
    // .debate.EventType type = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UIEvent, _impl_.type_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(UIEvent, _impl_.type_)}},
    // int64 timestamp = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(UIEvent, _impl_.timestamp_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(UIEvent, _impl_.timestamp_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string action_id = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(UIEvent, _impl_.action_id_)}},
    // repeated .debate.EventData event_data = 7;
    {::_pbi::TcParser::FastMtR1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(UIEvent, _impl_.event_data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string event_id = 1;
    {PROTOBUF_FIELD_OFFSET(UIEvent, _impl_.event_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string component_id = 2;
    {PROTOBUF_FIELD_OFFSET(UIEvent, _impl_.component_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .debate.EventType type = 3;
    {PROTOBUF_FIELD_OFFSET(UIEvent, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // int64 timestamp = 4;
    {PROTOBUF_FIELD_OFFSET(UIEvent, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // map<string, string> data = 5;
    {PROTOBUF_FIELD_OFFSET(UIEvent, _impl_.data_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // string action_id = 6;
    {PROTOBUF_FIELD_OFFSET(UIEvent, _impl_.action_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .debate.EventData event_data = 7;
    {PROTOBUF_FIELD_OFFSET(UIEvent, _impl_.event_data_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // map<string, string> metadata = 8;
    {PROTOBUF_FIELD_OFFSET(UIEvent, _impl_.metadata_), 0, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetTable<::debate::EventData>()},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(UIEvent()._impl_.data_)>(
        1, 0, 0, 9,
        9)},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(UIEvent()._impl_.metadata_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\16\10\14\0\0\4\11\0\10\0\0\0\0\0\0\0"
    "debate.UIEvent"
    "event_id"
    "component_id"
    "data"
    "action_id"
    "metadata"
  }},
};

PROTOBUF_NOINLINE void UIEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:debate.UIEvent)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.Clear();
  _impl_.event_data_.Clear();
  _impl_.metadata_.Clear();
  _impl_.event_id_.ClearToEmpty();
  _impl_.component_id_.ClearToEmpty();
  _impl_.action_id_.ClearToEmpty();
  ::memset(&_impl_.timestamp_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.type_) -
      reinterpret_cast<char*>(&_impl_.timestamp_)) + sizeof(_impl_.type_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* UIEvent::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const UIEvent& this_ = static_cast<const UIEvent&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* UIEvent::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const UIEvent& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:debate.UIEvent)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string event_id = 1;
          if (!this_._internal_event_id().empty()) {
            const std::string& _s = this_._internal_event_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "debate.UIEvent.event_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string component_id = 2;
          if (!this_._internal_component_id().empty()) {
            const std::string& _s = this_._internal_component_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "debate.UIEvent.component_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // .debate.EventType type = 3;
          if (this_._internal_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                3, this_._internal_type(), target);
          }

          // int64 timestamp = 4;
          if (this_._internal_timestamp() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<4>(
                    stream, this_._internal_timestamp(), target);
          }

          // map<string, string> data = 5;
          if (!this_._internal_data().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_data();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    5, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "debate.UIEvent.data");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "debate.UIEvent.data");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    5, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "debate.UIEvent.data");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "debate.UIEvent.data");
              }
            }
          }

          // string action_id = 6;
          if (!this_._internal_action_id().empty()) {
            const std::string& _s = this_._internal_action_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "debate.UIEvent.action_id");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // repeated .debate.EventData event_data = 7;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_event_data_size());
               i < n; i++) {
            const auto& repfield = this_._internal_event_data().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    7, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // map<string, string> metadata = 8;
          if (!this_._internal_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    8, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "debate.UIEvent.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "debate.UIEvent.metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    8, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "debate.UIEvent.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "debate.UIEvent.metadata");
              }
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:debate.UIEvent)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t UIEvent::ByteSizeLong(const MessageLite& base) {
          const UIEvent& this_ = static_cast<const UIEvent&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t UIEvent::ByteSizeLong() const {
          const UIEvent& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:debate.UIEvent)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> data = 5;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_data_size());
              for (const auto& entry : this_._internal_data()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
            // repeated .debate.EventData event_data = 7;
            {
              total_size += 1UL * this_._internal_event_data_size();
              for (const auto& msg : this_._internal_event_data()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // map<string, string> metadata = 8;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_metadata_size());
              for (const auto& entry : this_._internal_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string event_id = 1;
            if (!this_._internal_event_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_event_id());
            }
            // string component_id = 2;
            if (!this_._internal_component_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_component_id());
            }
            // string action_id = 6;
            if (!this_._internal_action_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_action_id());
            }
            // int64 timestamp = 4;
            if (this_._internal_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_timestamp());
            }
            // .debate.EventType type = 3;
            if (this_._internal_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_type());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void UIEvent::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UIEvent*>(&to_msg);
  auto& from = static_cast<const UIEvent&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:debate.UIEvent)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.data_.MergeFrom(from._impl_.data_);
  _this->_internal_mutable_event_data()->MergeFrom(
      from._internal_event_data());
  _this->_impl_.metadata_.MergeFrom(from._impl_.metadata_);
  if (!from._internal_event_id().empty()) {
    _this->_internal_set_event_id(from._internal_event_id());
  }
  if (!from._internal_component_id().empty()) {
    _this->_internal_set_component_id(from._internal_component_id());
  }
  if (!from._internal_action_id().empty()) {
    _this->_internal_set_action_id(from._internal_action_id());
  }
  if (from._internal_timestamp() != 0) {
    _this->_impl_.timestamp_ = from._impl_.timestamp_;
  }
  if (from._internal_type() != 0) {
    _this->_impl_.type_ = from._impl_.type_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UIEvent::CopyFrom(const UIEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debate.UIEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UIEvent::InternalSwap(UIEvent* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.data_.InternalSwap(&other->_impl_.data_);
  _impl_.event_data_.InternalSwap(&other->_impl_.event_data_);
  _impl_.metadata_.InternalSwap(&other->_impl_.metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.event_id_, &other->_impl_.event_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.component_id_, &other->_impl_.component_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.action_id_, &other->_impl_.action_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UIEvent, _impl_.type_)
      + sizeof(UIEvent::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(UIEvent, _impl_.timestamp_)>(
          reinterpret_cast<char*>(&_impl_.timestamp_),
          reinterpret_cast<char*>(&other->_impl_.timestamp_));
}

::google::protobuf::Metadata UIEvent::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class EventData::_Internal {
 public:
  using HasBits =
      decltype(std::declval<EventData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(EventData, _impl_._has_bits_);
};

EventData::EventData(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:debate.EventData)
}
inline PROTOBUF_NDEBUG_INLINE EventData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::debate::EventData& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        key_(arena, from.key_) {}

EventData::EventData(
    ::google::protobuf::Arena* arena,
    const EventData& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EventData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.value_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::debate::EventValue>(
                              arena, *from._impl_.value_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:debate.EventData)
}
inline PROTOBUF_NDEBUG_INLINE EventData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        key_(arena) {}

inline void EventData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.value_ = {};
}
EventData::~EventData() {
  // @@protoc_insertion_point(destructor:debate.EventData)
  SharedDtor(*this);
}
inline void EventData::SharedDtor(MessageLite& self) {
  EventData& this_ = static_cast<EventData&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.key_.Destroy();
  delete this_._impl_.value_;
  this_._impl_.~Impl_();
}

inline void* EventData::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) EventData(arena);
}
constexpr auto EventData::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(EventData),
                                            alignof(EventData));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull EventData::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_EventData_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &EventData::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<EventData>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &EventData::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<EventData>(), &EventData::ByteSizeLong,
            &EventData::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(EventData, _impl_._cached_size_),
        false,
    },
    &EventData::kDescriptorMethods,
    &descriptor_table_event_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* EventData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 28, 2> EventData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EventData, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::debate::EventData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .debate.EventValue value = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(EventData, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(EventData, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(EventData, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .debate.EventValue value = 2;
    {PROTOBUF_FIELD_OFFSET(EventData, _impl_.value_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::debate::EventValue>()},
  }}, {{
    "\20\3\0\0\0\0\0\0"
    "debate.EventData"
    "key"
  }},
};

PROTOBUF_NOINLINE void EventData::Clear() {
// @@protoc_insertion_point(message_clear_start:debate.EventData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.key_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.value_ != nullptr);
    _impl_.value_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* EventData::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const EventData& this_ = static_cast<const EventData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* EventData::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const EventData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:debate.EventData)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string key = 1;
          if (!this_._internal_key().empty()) {
            const std::string& _s = this_._internal_key();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "debate.EventData.key");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .debate.EventValue value = 2;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.value_, this_._impl_.value_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:debate.EventData)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t EventData::ByteSizeLong(const MessageLite& base) {
          const EventData& this_ = static_cast<const EventData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t EventData::ByteSizeLong() const {
          const EventData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:debate.EventData)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string key = 1;
            if (!this_._internal_key().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_key());
            }
          }
           {
            // .debate.EventValue value = 2;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void EventData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EventData*>(&to_msg);
  auto& from = static_cast<const EventData&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:debate.EventData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_key().empty()) {
    _this->_internal_set_key(from._internal_key());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.value_ != nullptr);
    if (_this->_impl_.value_ == nullptr) {
      _this->_impl_.value_ =
          ::google::protobuf::Message::CopyConstruct<::debate::EventValue>(arena, *from._impl_.value_);
    } else {
      _this->_impl_.value_->MergeFrom(*from._impl_.value_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EventData::CopyFrom(const EventData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debate.EventData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EventData::InternalSwap(EventData* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.key_, &other->_impl_.key_, arena);
  swap(_impl_.value_, other->_impl_.value_);
}

::google::protobuf::Metadata EventData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class EventValue::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::debate::EventValue, _impl_._oneof_case_);
};

void EventValue::set_allocated_list_value(::debate::StringList* list_value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (list_value) {
    ::google::protobuf::Arena* submessage_arena = list_value->GetArena();
    if (message_arena != submessage_arena) {
      list_value = ::google::protobuf::internal::GetOwnedMessage(message_arena, list_value, submessage_arena);
    }
    set_has_list_value();
    _impl_.value_.list_value_ = list_value;
  }
  // @@protoc_insertion_point(field_set_allocated:debate.EventValue.list_value)
}
EventValue::EventValue(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:debate.EventValue)
}
inline PROTOBUF_NDEBUG_INLINE EventValue::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::debate::EventValue& from_msg)
      : value_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

EventValue::EventValue(
    ::google::protobuf::Arena* arena,
    const EventValue& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EventValue* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (value_case()) {
    case VALUE_NOT_SET:
      break;
      case kTextValue:
        new (&_impl_.value_.text_value_) decltype(_impl_.value_.text_value_){arena, from._impl_.value_.text_value_};
        break;
      case kNumberValue:
        _impl_.value_.number_value_ = from._impl_.value_.number_value_;
        break;
      case kBooleanValue:
        _impl_.value_.boolean_value_ = from._impl_.value_.boolean_value_;
        break;
      case kDecimalValue:
        _impl_.value_.decimal_value_ = from._impl_.value_.decimal_value_;
        break;
      case kBinaryValue:
        new (&_impl_.value_.binary_value_) decltype(_impl_.value_.binary_value_){arena, from._impl_.value_.binary_value_};
        break;
      case kListValue:
        _impl_.value_.list_value_ = ::google::protobuf::Message::CopyConstruct<::debate::StringList>(arena, *from._impl_.value_.list_value_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:debate.EventValue)
}
inline PROTOBUF_NDEBUG_INLINE EventValue::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : value_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void EventValue::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
EventValue::~EventValue() {
  // @@protoc_insertion_point(destructor:debate.EventValue)
  SharedDtor(*this);
}
inline void EventValue::SharedDtor(MessageLite& self) {
  EventValue& this_ = static_cast<EventValue&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_value()) {
    this_.clear_value();
  }
  this_._impl_.~Impl_();
}

void EventValue::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:debate.EventValue)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (value_case()) {
    case kTextValue: {
      _impl_.value_.text_value_.Destroy();
      break;
    }
    case kNumberValue: {
      // No need to clear
      break;
    }
    case kBooleanValue: {
      // No need to clear
      break;
    }
    case kDecimalValue: {
      // No need to clear
      break;
    }
    case kBinaryValue: {
      _impl_.value_.binary_value_.Destroy();
      break;
    }
    case kListValue: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.list_value_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.list_value_);
      }
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = VALUE_NOT_SET;
}


inline void* EventValue::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) EventValue(arena);
}
constexpr auto EventValue::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(EventValue),
                                            alignof(EventValue));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull EventValue::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_EventValue_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &EventValue::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<EventValue>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &EventValue::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<EventValue>(), &EventValue::ByteSizeLong,
            &EventValue::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(EventValue, _impl_._cached_size_),
        false,
    },
    &EventValue::kDescriptorMethods,
    &descriptor_table_event_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* EventValue::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 6, 1, 36, 2> EventValue::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::debate::EventValue>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string text_value = 1;
    {PROTOBUF_FIELD_OFFSET(EventValue, _impl_.value_.text_value_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 number_value = 2;
    {PROTOBUF_FIELD_OFFSET(EventValue, _impl_.value_.number_value_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kInt64)},
    // bool boolean_value = 3;
    {PROTOBUF_FIELD_OFFSET(EventValue, _impl_.value_.boolean_value_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kBool)},
    // double decimal_value = 4;
    {PROTOBUF_FIELD_OFFSET(EventValue, _impl_.value_.decimal_value_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kDouble)},
    // bytes binary_value = 5;
    {PROTOBUF_FIELD_OFFSET(EventValue, _impl_.value_.binary_value_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kBytes | ::_fl::kRepAString)},
    // .debate.StringList list_value = 6;
    {PROTOBUF_FIELD_OFFSET(EventValue, _impl_.value_.list_value_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::debate::StringList>()},
  }}, {{
    "\21\12\0\0\0\0\0\0"
    "debate.EventValue"
    "text_value"
  }},
};

PROTOBUF_NOINLINE void EventValue::Clear() {
// @@protoc_insertion_point(message_clear_start:debate.EventValue)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_value();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* EventValue::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const EventValue& this_ = static_cast<const EventValue&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* EventValue::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const EventValue& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:debate.EventValue)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          switch (this_.value_case()) {
            case kTextValue: {
              const std::string& _s = this_._internal_text_value();
              ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                  _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "debate.EventValue.text_value");
              target = stream->WriteStringMaybeAliased(1, _s, target);
              break;
            }
            case kNumberValue: {
              target = ::google::protobuf::internal::WireFormatLite::
                  WriteInt64ToArrayWithField<2>(
                      stream, this_._internal_number_value(), target);
              break;
            }
            case kBooleanValue: {
              target = stream->EnsureSpace(target);
              target = ::_pbi::WireFormatLite::WriteBoolToArray(
                  3, this_._internal_boolean_value(), target);
              break;
            }
            case kDecimalValue: {
              target = stream->EnsureSpace(target);
              target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                  4, this_._internal_decimal_value(), target);
              break;
            }
            case kBinaryValue: {
              const std::string& _s = this_._internal_binary_value();
              target = stream->WriteBytesMaybeAliased(5, _s, target);
              break;
            }
            case kListValue: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  6, *this_._impl_.value_.list_value_, this_._impl_.value_.list_value_->GetCachedSize(), target,
                  stream);
              break;
            }
            default:
              break;
          }
          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:debate.EventValue)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t EventValue::ByteSizeLong(const MessageLite& base) {
          const EventValue& this_ = static_cast<const EventValue&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t EventValue::ByteSizeLong() const {
          const EventValue& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:debate.EventValue)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          switch (this_.value_case()) {
            // string text_value = 1;
            case kTextValue: {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_text_value());
              break;
            }
            // int64 number_value = 2;
            case kNumberValue: {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_number_value());
              break;
            }
            // bool boolean_value = 3;
            case kBooleanValue: {
              total_size += 2;
              break;
            }
            // double decimal_value = 4;
            case kDecimalValue: {
              total_size += 9;
              break;
            }
            // bytes binary_value = 5;
            case kBinaryValue: {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_binary_value());
              break;
            }
            // .debate.StringList list_value = 6;
            case kListValue: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_.list_value_);
              break;
            }
            case VALUE_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void EventValue::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EventValue*>(&to_msg);
  auto& from = static_cast<const EventValue&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:debate.EventValue)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_value();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kTextValue: {
        if (oneof_needs_init) {
          _this->_impl_.value_.text_value_.InitDefault();
        }
        _this->_impl_.value_.text_value_.Set(from._internal_text_value(), arena);
        break;
      }
      case kNumberValue: {
        _this->_impl_.value_.number_value_ = from._impl_.value_.number_value_;
        break;
      }
      case kBooleanValue: {
        _this->_impl_.value_.boolean_value_ = from._impl_.value_.boolean_value_;
        break;
      }
      case kDecimalValue: {
        _this->_impl_.value_.decimal_value_ = from._impl_.value_.decimal_value_;
        break;
      }
      case kBinaryValue: {
        if (oneof_needs_init) {
          _this->_impl_.value_.binary_value_.InitDefault();
        }
        _this->_impl_.value_.binary_value_.Set(from._internal_binary_value(), arena);
        break;
      }
      case kListValue: {
        if (oneof_needs_init) {
          _this->_impl_.value_.list_value_ =
              ::google::protobuf::Message::CopyConstruct<::debate::StringList>(arena, *from._impl_.value_.list_value_);
        } else {
          _this->_impl_.value_.list_value_->MergeFrom(from._internal_list_value());
        }
        break;
      }
      case VALUE_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EventValue::CopyFrom(const EventValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debate.EventValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EventValue::InternalSwap(EventValue* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.value_, other->_impl_.value_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata EventValue::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class StringList::_Internal {
 public:
};

StringList::StringList(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:debate.StringList)
}
inline PROTOBUF_NDEBUG_INLINE StringList::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::debate::StringList& from_msg)
      : values_{visibility, arena, from.values_},
        _cached_size_{0} {}

StringList::StringList(
    ::google::protobuf::Arena* arena,
    const StringList& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  StringList* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:debate.StringList)
}
inline PROTOBUF_NDEBUG_INLINE StringList::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : values_{visibility, arena},
        _cached_size_{0} {}

inline void StringList::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
StringList::~StringList() {
  // @@protoc_insertion_point(destructor:debate.StringList)
  SharedDtor(*this);
}
inline void StringList::SharedDtor(MessageLite& self) {
  StringList& this_ = static_cast<StringList&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* StringList::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) StringList(arena);
}
constexpr auto StringList::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(StringList, _impl_.values_) +
          decltype(StringList::_impl_.values_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(StringList), alignof(StringList), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&StringList::PlacementNew_,
                                 sizeof(StringList),
                                 alignof(StringList));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull StringList::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_StringList_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &StringList::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<StringList>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &StringList::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<StringList>(), &StringList::ByteSizeLong,
            &StringList::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(StringList, _impl_._cached_size_),
        false,
    },
    &StringList::kDescriptorMethods,
    &descriptor_table_event_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* StringList::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 32, 2> StringList::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::debate::StringList>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string values = 1;
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(StringList, _impl_.values_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string values = 1;
    {PROTOBUF_FIELD_OFFSET(StringList, _impl_.values_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\21\6\0\0\0\0\0\0"
    "debate.StringList"
    "values"
  }},
};

PROTOBUF_NOINLINE void StringList::Clear() {
// @@protoc_insertion_point(message_clear_start:debate.StringList)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.values_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* StringList::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const StringList& this_ = static_cast<const StringList&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* StringList::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const StringList& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:debate.StringList)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated string values = 1;
          for (int i = 0, n = this_._internal_values_size(); i < n; ++i) {
            const auto& s = this_._internal_values().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "debate.StringList.values");
            target = stream->WriteString(1, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:debate.StringList)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t StringList::ByteSizeLong(const MessageLite& base) {
          const StringList& this_ = static_cast<const StringList&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t StringList::ByteSizeLong() const {
          const StringList& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:debate.StringList)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string values = 1;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_values().size());
              for (int i = 0, n = this_._internal_values().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_values().Get(i));
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void StringList::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StringList*>(&to_msg);
  auto& from = static_cast<const StringList&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:debate.StringList)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_values()->MergeFrom(from._internal_values());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StringList::CopyFrom(const StringList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debate.StringList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void StringList::InternalSwap(StringList* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.values_.InternalSwap(&other->_impl_.values_);
}

::google::protobuf::Metadata StringList::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace debate
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_event_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
